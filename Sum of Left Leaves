/* Description: Given the root of a binary tree, return the sum of all left leaves.
                A leaf is a node with no children. A left leaf is a leaf that is the left child of another node. 
                Input: root = [3,9,20,null,null,15,7]
                Output: 24
                Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum=0;
    public int sumOfLeftLeaves(TreeNode root) { 
         TreeNode temp = root;
        
         if(root.left == null & root.right==null){
           return 0;
         }
                      
        if(temp.left!=null){
            if(temp.left.left == null && temp.left.right==null){
                sum+= temp.left.val;    
            }
            sumOfLeftLeaves(temp.left);      
        }
                
        if(temp.right != null){
            sumOfLeftLeaves(temp.right);
        }
        
        return sum;
    }
}
